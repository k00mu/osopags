services:
  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_HOST=${POSTGRES_HOST:-db}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-osopags}
    ports:
      - "${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    environment:
      - REDIS_PORT=${REDIS_PORT:-6379}
    ports:
      - "${REDIS_PORT:-6379}:${REDIS_PORT:-6379}"

  engine:
    build: ./engine
    ports:
      - "${ENGINE_PORT:-3000}:${ENGINE_PORT:-3000}"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - ENGINE_PORT=${ENGINE_PORT:-3000}
    develop:
      watch:
        - action: sync
          path: ./engine
          target: /app

  web:
    build: ./web
    ports:
      - "${WEB_PORT:-5000}:${WEB_PORT:-5000}"
    environment:
      - WEB_PORT=${WEB_PORT:-5000}
      - VITE_DEV_SERVER_HOST=0.0.0.0
      - VITE_DEV_SERVER_PORT=${WEB_PORT:-5000}
    develop:
      watch:
        - action: sync
          path: ./web
          target: /app

  nginx:
    image: nginx:latest
    environment:
      - ENGINE_PORT=${ENGINE_PORT:-3000}
      - WEB_PORT=${WEB_PORT:-5000}
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf.template:ro
      - ./scripts/start-nginx.sh:/scripts/start-nginx.sh:ro
    depends_on:
      - engine
      - web
    entrypoint: /bin/sh -c "/scripts/start-nginx.sh"

volumes:
  db_data:
